// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dydxprotocol/daemons/metrics/metrics.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("dydxprotocol/daemons/metrics/metrics.proto", fileDescriptor_9ce8400ae24e32ff)
}

var fileDescriptor_9ce8400ae24e32ff = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4a, 0xa9, 0x4c, 0xa9,
	0x28, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x4f, 0x49, 0x4c, 0xcd, 0xcd, 0xcf, 0x2b,
	0xd6, 0xcf, 0x4d, 0x2d, 0x29, 0xca, 0x4c, 0x86, 0xd3, 0x7a, 0x60, 0x05, 0x42, 0x32, 0xc8, 0x6a,
	0xf5, 0xa0, 0x6a, 0xf5, 0xa0, 0x6a, 0xa4, 0x44, 0xd2, 0xf3, 0xd3, 0xf3, 0xc1, 0xb2, 0xfa, 0x20,
	0x16, 0x44, 0x8f, 0x91, 0x00, 0x17, 0x9f, 0x2f, 0x44, 0x41, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72,
	0xaa, 0x53, 0xf8, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38,
	0xe1, 0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e, 0xcb, 0x31, 0x44, 0xd9, 0xa6, 0x67,
	0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0xa3, 0x38, 0xab, 0xcc, 0x44, 0x37, 0x39,
	0x23, 0x31, 0x33, 0x4f, 0x1f, 0xa7, 0x43, 0x13, 0x0b, 0x32, 0x93, 0xd8, 0xc0, 0xb2, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x43, 0x9e, 0x2f, 0xd3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetricsServiceClient is the client API for MetricsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetricsServiceClient interface {
}

type metricsServiceClient struct {
	cc grpc1.ClientConn
}

func NewMetricsServiceClient(cc grpc1.ClientConn) MetricsServiceClient {
	return &metricsServiceClient{cc}
}

// MetricsServiceServer is the server API for MetricsService service.
type MetricsServiceServer interface {
}

// UnimplementedMetricsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetricsServiceServer struct {
}

func RegisterMetricsServiceServer(s grpc1.Server, srv MetricsServiceServer) {
	s.RegisterService(&_MetricsService_serviceDesc, srv)
}

var _MetricsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dydxprotocol.daemons.metrics.MetricsService",
	HandlerType: (*MetricsServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "dydxprotocol/daemons/metrics/metrics.proto",
}

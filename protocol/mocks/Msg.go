// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	types "github.com/cosmos/cosmos-sdk/types"
	mock "github.com/stretchr/testify/mock"
)

// Msg is an autogenerated mock type for the Msg type
type Msg struct {
	mock.Mock
}

// GetSigners provides a mock function with given fields:
func (_m *Msg) GetSigners() []types.AccAddress {
	ret := _m.Called()

	var r0 []types.AccAddress
	if rf, ok := ret.Get(0).(func() []types.AccAddress); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.AccAddress)
		}
	}

	return r0
}

// ProtoMessage provides a mock function with given fields:
func (_m *Msg) ProtoMessage() {
	_m.Called()
}

// Reset provides a mock function with given fields:
func (_m *Msg) Reset() {
	_m.Called()
}

// String provides a mock function with given fields:
func (_m *Msg) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ValidateBasic provides a mock function with given fields:
func (_m *Msg) ValidateBasic() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMsg interface {
	mock.TestingT
	Cleanup(func())
}

// NewMsg creates a new instance of Msg. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMsg(t mockConstructorTestingTNewMsg) *Msg {
	mock := &Msg{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	types "github.com/cosmos/cosmos-sdk/types"
)

// PerpetualClobPairInitializingChecker is an autogenerated mock type for the PerpetualClobPairInitializingChecker type
type PerpetualClobPairInitializingChecker struct {
	mock.Mock
}

// IsPerpetualClobPairInitializing provides a mock function with given fields: ctx, perpetualId
func (_m *PerpetualClobPairInitializingChecker) IsPerpetualClobPairInitializing(ctx types.Context, perpetualId uint32) (bool, error) {
	ret := _m.Called(ctx, perpetualId)

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(types.Context, uint32) (bool, error)); ok {
		return rf(ctx, perpetualId)
	}
	if rf, ok := ret.Get(0).(func(types.Context, uint32) bool); ok {
		r0 = rf(ctx, perpetualId)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(types.Context, uint32) error); ok {
		r1 = rf(ctx, perpetualId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPerpetualClobPairInitializingChecker interface {
	mock.TestingT
	Cleanup(func())
}

// NewPerpetualClobPairInitializingChecker creates a new instance of PerpetualClobPairInitializingChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPerpetualClobPairInitializingChecker(t mockConstructorTestingTNewPerpetualClobPairInitializingChecker) *PerpetualClobPairInitializingChecker {
	mock := &PerpetualClobPairInitializingChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	time "time"

	types "github.com/cosmos/cosmos-sdk/types"
)

// BlockTimeKeeper is an autogenerated mock type for the BlockTimeKeeper type
type BlockTimeKeeper struct {
	mock.Mock
}

// GetTimeSinceLastBlock provides a mock function with given fields: ctx
func (_m *BlockTimeKeeper) GetTimeSinceLastBlock(ctx types.Context) time.Duration {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetTimeSinceLastBlock")
	}

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func(types.Context) time.Duration); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	return r0
}

// NewBlockTimeKeeper creates a new instance of BlockTimeKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBlockTimeKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *BlockTimeKeeper {
	mock := &BlockTimeKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

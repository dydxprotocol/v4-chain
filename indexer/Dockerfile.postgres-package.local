# Dockerfile to containerize postgres package locally
FROM dydxprotocol/indexer-node:16-alpine-m1
ENV NODE_ENV=development

RUN adduser -S dydx
RUN mkdir -p /home/dydx/app
RUN chown dydx -R /home/dydx/app

WORKDIR /home/dydx/app

# Copy pnpm lock and workspace and package.json from base directory
COPY ./pnpm-lock.yaml ./pnpm-workspace.yaml ./package.json ./

# Copy patches
COPY ./patches ./patches

# Copy package.json from postgres and imported packages being run
COPY ./packages/base/package.json ./packages/base/
COPY ./packages/postgres/package.json ./packages/postgres/
COPY ./packages/v4-protos/package.json ./packages/v4-protos/
COPY ./packages/v4-proto-parser/package.json ./packages/v4-proto-parser/

# Copy build files from postgres and imported packages being run
COPY ./packages/base/build ./packages/base/build/
COPY ./packages/postgres/build ./packages/postgres/build/
COPY ./packages/v4-protos/build ./packages/v4-protos/build/
COPY ./packages/v4-proto-parser/build ./packages/v4-proto-parser/build/

# Copy src directory from postgres for migrations
COPY ./packages/postgres/src ./packages/postgres/src

# Copy knexfile.js for configurations
COPY ./packages/postgres/knexfile.js ./packages/postgres

# Copy .env files
COPY ./packages/postgres/.env* ./packages/postgres/

RUN chown dydx -R /home/dydx/app

USER dydx

# Install npm modules using pnpm
RUN pnpm i --loglevel warn --production --frozen-lockfile --unsafe-perm

WORKDIR /home/dydx/app/packages/postgres

CMD ["sh", "-c", "pnpm run migrate"]

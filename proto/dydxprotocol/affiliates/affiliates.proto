syntax = "proto3";
package dydxprotocol.affiliates;

import "gogoproto/gogo.proto";

option go_package = "github.com/dydxprotocol/v4-chain/protocol/x/affiliates/types";

// AffiliateTiers defines the affiliate tiers.
message AffiliateTiers {
  // Tier defines an affiliate tier.
  message Tier {
    // Required all-time referred volume in quote quantums.
    uint64 req_referred_volume_quote_quantums = 1;
    // Required currently staked native tokens (in whole coins).
    uint32 req_staked_whole_coins = 2;
    // Taker fee share in parts-per-million.
    uint32 taker_fee_share_ppm = 3;
  }
  // All affiliate tiers
  repeated Tier tiers = 1 [ (gogoproto.nullable) = false ];
}

// AffiliateWhitelist specifies the whitelisted affiliates.
// If an address is in the whitelist, then the affiliate fee share in
// this object will override fee share from the regular affiliate tiers above.
message AffiliateWhitelist {
  // Tier defines an affiliate whitelist tier.
  message Tier {
    // List of unique whitelisted addresses.
    repeated string addresses = 1;
    // Taker fee share in parts-per-million.
    uint32 taker_fee_share_ppm = 2;
  }
  // All affiliate whitelist tiers.
  repeated Tier tiers = 1 [ (gogoproto.nullable) = false ];
}
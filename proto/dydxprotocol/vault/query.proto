syntax = "proto3";
package dydxprotocol.vault;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "dydxprotocol/subaccounts/subaccount.proto";
import "dydxprotocol/vault/params.proto";
import "dydxprotocol/vault/share.proto";
import "dydxprotocol/vault/vault.proto";

option go_package = "github.com/dydxprotocol/v4-chain/protocol/x/vault/types";

// Query defines the gRPC querier service.
service Query {
  // Queries the Params.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/dydxprotocol/vault/params";
  }
  // Queries a Vault by type and number.
  rpc Vault(QueryVaultRequest) returns (QueryVaultResponse) {
    option (google.api.http).get = "/dydxprotocol/vault/vault/{type}/{number}";
  }
  // Queries all vaults.
  rpc AllVaults(QueryAllVaultsRequest) returns (QueryAllVaultsResponse) {
    option (google.api.http).get = "/dydxprotocol/vault/vault";
  }
  // Queries total shares of megavault.
  rpc MegavaultTotalShares(QueryMegavaultTotalSharesRequest)
      returns (QueryMegavaultTotalSharesResponse) {
    option (google.api.http).get = "/dydxprotocol/vault/megavault/total_shares";
  }
  // Queries owner shares of megavault.
  rpc MegavaultOwnerShares(QueryMegavaultOwnerSharesRequest)
      returns (QueryMegavaultOwnerSharesResponse) {
    option (google.api.http).get = "/dydxprotocol/vault/megavault/owner_shares";
  }
}

// QueryParamsRequest is a request type for the Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is a response type for the Params RPC method.
message QueryParamsResponse {
  // Deprecated since v6.x in favor of default_quoting_params.
  Params params = 1 [ (gogoproto.nullable) = false, deprecated = true ];
  QuotingParams default_quoting_params = 2 [ (gogoproto.nullable) = false ];
}

// QueryVaultRequest is a request type for the Vault RPC method.
message QueryVaultRequest {
  VaultType type = 1;
  uint32 number = 2;
}

// QueryVaultResponse is a response type for the Vault RPC method.
message QueryVaultResponse {
  VaultId vault_id = 1 [ (gogoproto.nullable) = false ];
  dydxprotocol.subaccounts.SubaccountId subaccount_id = 2
      [ (gogoproto.nullable) = false ];
  bytes equity = 3 [
    (gogoproto.customtype) =
        "github.com/dydxprotocol/v4-chain/protocol/dtypes.SerializableInt",
    (gogoproto.nullable) = false
  ];
  bytes inventory = 4 [
    (gogoproto.customtype) =
        "github.com/dydxprotocol/v4-chain/protocol/dtypes.SerializableInt",
    (gogoproto.nullable) = false
  ];
  VaultParams vault_params = 5 [ (gogoproto.nullable) = false ];
}

// QueryAllVaultsRequest is a request type for the AllVaults RPC method.
message QueryAllVaultsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllVaultsResponse is a response type for the AllVaults RPC method.
message QueryAllVaultsResponse {
  repeated QueryVaultResponse vaults = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryMegavaultTotalSharesRequest is a request type for the
// MegavaultTotalShares RPC method.
message QueryMegavaultTotalSharesRequest {}

// QueryMegavaultTotalSharesResponse is a response type for the
// MegavaultTotalShares RPC method.
message QueryMegavaultTotalSharesResponse { NumShares total_shares = 1; }

// QueryMegavaultOwnerSharesRequest is a request type for the
// MegavaultOwnerShares RPC method.
message QueryMegavaultOwnerSharesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryMegavaultOwnerSharesResponse is a response type for the
// MegavaultOwnerShares RPC method.
message QueryMegavaultOwnerSharesResponse {
  repeated OwnerShare owner_shares = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

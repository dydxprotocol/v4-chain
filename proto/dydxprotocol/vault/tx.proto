syntax = "proto3";
package dydxprotocol.vault;

import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "dydxprotocol/subaccounts/subaccount.proto";
import "dydxprotocol/vault/params.proto";
import "dydxprotocol/vault/share.proto";
import "dydxprotocol/vault/vault.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/dydxprotocol/v4-chain/protocol/x/vault/types";

// Msg defines the Msg service.
service Msg {
  // DepositToMegavault deposits funds into megavault.
  rpc DepositToMegavault(MsgDepositToMegavault)
      returns (MsgDepositToMegavaultResponse);

  // UpdateDefaultQuotingParams updates the default quoting params in state.
  rpc UpdateDefaultQuotingParams(MsgUpdateDefaultQuotingParams)
      returns (MsgUpdateDefaultQuotingParamsResponse);

  // SetVaultParams sets the parameters of a specific vault.
  rpc SetVaultParams(MsgSetVaultParams) returns (MsgSetVaultParamsResponse);
}

// MsgDepositToMegavault deposits the specified asset from the subaccount to
// megavault.
message MsgDepositToMegavault {
  // This annotation enforces that the tx signer is the owner specified in
  // subaccount_id. Therefore, this enforces that only the owner of the
  // subaccount can deposit into the vault using that subaccount.
  option (cosmos.msg.v1.signer) = "subaccount_id";

  // The subaccount to deposit from.
  dydxprotocol.subaccounts.SubaccountId subaccount_id = 1;

  // Number of quote quantums to deposit.
  bytes quote_quantums = 2 [
    (gogoproto.customtype) =
        "github.com/dydxprotocol/v4-chain/protocol/dtypes.SerializableInt",
    (gogoproto.nullable) = false
  ];
}

// MsgDepositToMegavaultResponse is the Msg/DepositToMegavault response type.
message MsgDepositToMegavaultResponse {
  // The number of shares minted from the deposit.
  NumShares minted_shares = 1 [ (gogoproto.nullable) = false ];
}

// MsgUpdateDefaultQuotingParams is the Msg/UpdateDefaultQuotingParams request
// type.
message MsgUpdateDefaultQuotingParams {
  // Authority is the address that controls the module.
  option (cosmos.msg.v1.signer) = "authority";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The quoting parameters to update to. Every field must be set.
  QuotingParams default_quoting_params = 2 [ (gogoproto.nullable) = false ];
}

// MsgUpdateDefaultQuotingParamsResponse is the Msg/UpdateDefaultQuotingParams
// response type.
message MsgUpdateDefaultQuotingParamsResponse {}

// MsgSetVaultParams is the Msg/SetVaultParams request type.
message MsgSetVaultParams {
  // Authority is the address that controls the module.
  option (cosmos.msg.v1.signer) = "authority";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The vault to set params of.
  VaultId vault_id = 2 [ (gogoproto.nullable) = false ];

  // The parameters to set.
  VaultParams vault_params = 3 [ (gogoproto.nullable) = false ];
}

// MsgSetVaultParamsResponse is the Msg/SetVaultParams response type.
message MsgSetVaultParamsResponse {}

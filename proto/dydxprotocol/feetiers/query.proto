syntax = "proto3";
package dydxprotocol.feetiers;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "dydxprotocol/feetiers/params.proto";
import "dydxprotocol/feetiers/fee_holiday.proto";

option go_package = "github.com/dydxprotocol/v4-chain/protocol/x/feetiers/types";

// Query defines the gRPC querier service.
service Query {
  // Queries the PerpetualFeeParams.
  rpc PerpetualFeeParams(QueryPerpetualFeeParamsRequest)
      returns (QueryPerpetualFeeParamsResponse) {
    option (google.api.http).get =
        "/dydxprotocol/v4/feetiers/perpetual_fee_params";
  }

  // Queries a user's fee tier
  rpc UserFeeTier(QueryUserFeeTierRequest) returns (QueryUserFeeTierResponse) {
    option (google.api.http).get = "/dydxprotocol/v4/feetiers/user_fee_tier";
  }

  // Queries the FeeHolidayParams
  rpc FeeHolidayParams(QueryFeeHolidayParamsRequest)
      returns (QueryFeeHolidayParamsResponse) {
    option (google.api.http).get =
        "/dydxprotocol/v4/feetiers/fee_holiday_params/{clob_pair_id}";
  }

  // Queries all fee holiday params
  rpc AllFeeHolidayParams(QueryAllFeeHolidayParamsRequest)
      returns (QueryAllFeeHolidayParamsResponse) {
    option (google.api.http).get =
        "/dydxprotocol/v4/feetiers/fee_holiday_params";
  }
}

// QueryPerpetualFeeParamsRequest is a request type for the PerpetualFeeParams
// RPC method.
message QueryPerpetualFeeParamsRequest {}

// QueryPerpetualFeeParamsResponse is a response type for the PerpetualFeeParams
// RPC method.
message QueryPerpetualFeeParamsResponse {
  PerpetualFeeParams params = 1 [ (gogoproto.nullable) = false ];
}

// QueryUserFeeTierRequest is a request type for the UserFeeTier RPC method.
message QueryUserFeeTierRequest {
  string user = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// QueryUserFeeTierResponse is a request type for the UserFeeTier RPC method.
message QueryUserFeeTierResponse {
  // Index of the fee tier in the list queried from PerpetualFeeParams.
  uint32 index = 1;
  PerpetualFeeTier tier = 2;
}

// QueryFeeHolidayParamsRequest is a request type for the FeeHolidayParams RPC
// method.
message QueryFeeHolidayParamsRequest { uint32 clob_pair_id = 1; }

// QueryFeeHolidayParamsResponse is a response type for the FeeHolidayParams RPC
// method.
message QueryFeeHolidayParamsResponse {
  FeeHolidayParams params = 1 [ (gogoproto.nullable) = false ];
}

// QueryAllFeeHolidayParamsRequest is a request type for the AllFeeHolidayParams
// RPC method.
message QueryAllFeeHolidayParamsRequest {}

// QueryAllFeeHolidayParamsResponse is a response type for the
// AllFeeHolidayParams RPC method.
message QueryAllFeeHolidayParamsResponse {
  repeated FeeHolidayParams params = 1 [ (gogoproto.nullable) = false ];
}
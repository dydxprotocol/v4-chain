// This file is @generated by prost-build.
/// OrderRemovalReason is an enum of all the reasons an order was removed.
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum OrderRemovalReason {
    /// Default value, this is invalid and unused.
    Unspecified = 0,
    /// The order was removed due to being expired.
    Expired = 1,
    /// The order was removed due to being canceled by a user.
    UserCanceled = 2,
    /// The order was removed due to being undercollateralized.
    Undercollateralized = 3,
    /// The order caused an internal error during order placement and was
    /// removed.
    InternalError = 4,
    /// The order would have matched against another order placed by the same
    /// subaccount and was removed.
    SelfTradeError = 5,
    /// The order would have matched against maker orders on the orderbook
    /// despite being a post-only order and was removed.
    PostOnlyWouldCrossMakerOrder = 6,
    /// The order was an ICO order and would have been placed on the orderbook as
    /// resting liquidity and was removed.
    ImmediateOrCancelWouldRestOnBook = 7,
    /// The order was a fill-or-kill order that could not be fully filled and was
    /// removed.
    FokOrderCouldNotBeFullyFulled = 8,
    /// The order was a reduce-only order that was removed due to either:
    /// - being a taker order and fully-filling the order would flip the side of
    ///     the subaccount's position, in this case the remaining size of the
    ///     order is removed
    /// - being a maker order resting on the book and being removed when either
    ///     the subaccount's position is closed or flipped sides
    ReduceOnlyResize = 9,
    /// The order should be expired, according to the Indexer's cached data, but
    /// the Indexer has yet to receive a message to remove the order. In order to
    /// keep the data cached by the Indexer up-to-date and accurate, clear out
    /// the data if it's expired by sending an order removal with this reason.
    /// Protocol should never send this reason to Indexer.
    IndexerExpired = 10,
    /// The order has been replaced.
    Replaced = 11,
    /// The order has been fully-filled. Only sent by the Indexer for stateful
    /// orders.
    FullyFilled = 12,
    /// The order has been removed since the subaccount does not satisfy the
    /// equity tier requirements.
    EquityTier = 13,
    /// The order has been removed since its ClobPair has entered final settlement.
    FinalSettlement = 14,
    /// The order has been removed since filling it would lead to the subaccount
    /// violating isolated subaccount constraints.
    ViolatesIsolatedSubaccountConstraints = 15,
}
impl OrderRemovalReason {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            OrderRemovalReason::Unspecified => "ORDER_REMOVAL_REASON_UNSPECIFIED",
            OrderRemovalReason::Expired => "ORDER_REMOVAL_REASON_EXPIRED",
            OrderRemovalReason::UserCanceled => "ORDER_REMOVAL_REASON_USER_CANCELED",
            OrderRemovalReason::Undercollateralized => {
                "ORDER_REMOVAL_REASON_UNDERCOLLATERALIZED"
            }
            OrderRemovalReason::InternalError => "ORDER_REMOVAL_REASON_INTERNAL_ERROR",
            OrderRemovalReason::SelfTradeError => "ORDER_REMOVAL_REASON_SELF_TRADE_ERROR",
            OrderRemovalReason::PostOnlyWouldCrossMakerOrder => {
                "ORDER_REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER"
            }
            OrderRemovalReason::ImmediateOrCancelWouldRestOnBook => {
                "ORDER_REMOVAL_REASON_IMMEDIATE_OR_CANCEL_WOULD_REST_ON_BOOK"
            }
            OrderRemovalReason::FokOrderCouldNotBeFullyFulled => {
                "ORDER_REMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FULLY_FULLED"
            }
            OrderRemovalReason::ReduceOnlyResize => {
                "ORDER_REMOVAL_REASON_REDUCE_ONLY_RESIZE"
            }
            OrderRemovalReason::IndexerExpired => "ORDER_REMOVAL_REASON_INDEXER_EXPIRED",
            OrderRemovalReason::Replaced => "ORDER_REMOVAL_REASON_REPLACED",
            OrderRemovalReason::FullyFilled => "ORDER_REMOVAL_REASON_FULLY_FILLED",
            OrderRemovalReason::EquityTier => "ORDER_REMOVAL_REASON_EQUITY_TIER",
            OrderRemovalReason::FinalSettlement => {
                "ORDER_REMOVAL_REASON_FINAL_SETTLEMENT"
            }
            OrderRemovalReason::ViolatesIsolatedSubaccountConstraints => {
                "ORDER_REMOVAL_REASON_VIOLATES_ISOLATED_SUBACCOUNT_CONSTRAINTS"
            }
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ORDER_REMOVAL_REASON_UNSPECIFIED" => Some(Self::Unspecified),
            "ORDER_REMOVAL_REASON_EXPIRED" => Some(Self::Expired),
            "ORDER_REMOVAL_REASON_USER_CANCELED" => Some(Self::UserCanceled),
            "ORDER_REMOVAL_REASON_UNDERCOLLATERALIZED" => Some(Self::Undercollateralized),
            "ORDER_REMOVAL_REASON_INTERNAL_ERROR" => Some(Self::InternalError),
            "ORDER_REMOVAL_REASON_SELF_TRADE_ERROR" => Some(Self::SelfTradeError),
            "ORDER_REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER" => {
                Some(Self::PostOnlyWouldCrossMakerOrder)
            }
            "ORDER_REMOVAL_REASON_IMMEDIATE_OR_CANCEL_WOULD_REST_ON_BOOK" => {
                Some(Self::ImmediateOrCancelWouldRestOnBook)
            }
            "ORDER_REMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FULLY_FULLED" => {
                Some(Self::FokOrderCouldNotBeFullyFulled)
            }
            "ORDER_REMOVAL_REASON_REDUCE_ONLY_RESIZE" => Some(Self::ReduceOnlyResize),
            "ORDER_REMOVAL_REASON_INDEXER_EXPIRED" => Some(Self::IndexerExpired),
            "ORDER_REMOVAL_REASON_REPLACED" => Some(Self::Replaced),
            "ORDER_REMOVAL_REASON_FULLY_FILLED" => Some(Self::FullyFilled),
            "ORDER_REMOVAL_REASON_EQUITY_TIER" => Some(Self::EquityTier),
            "ORDER_REMOVAL_REASON_FINAL_SETTLEMENT" => Some(Self::FinalSettlement),
            "ORDER_REMOVAL_REASON_VIOLATES_ISOLATED_SUBACCOUNT_CONSTRAINTS" => {
                Some(Self::ViolatesIsolatedSubaccountConstraints)
            }
            _ => None,
        }
    }
}
